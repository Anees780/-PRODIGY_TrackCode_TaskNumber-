 i have build to a web based stopwatch application using html css js


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stopwatch</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .stopwatch {
            text-align: center;
        }

        #display {
            font-size: 4em;
            font-family: monospace;
            margin: 20px;
        }

        .buttons {
            margin: 20px;
        }

        .btn {
            margin: 0 5px;
            padding: 10px 20px;
        }

        #laps {
            margin-top: 20px;
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="stopwatch">
            <div id="display">00:00:00:00</div>
            <div class="buttons">
                <button id="startPause" class="btn btn-success">Start</button>
                <button id="lap" class="btn btn-secondary" disabled>Lap</button>
                <button id="reset" class="btn btn-danger">Reset</button>
            </div>
            <ul id="laps" class="list-unstyled"></ul>
        </div>
    </div>

    <script>
        let startTime;
        let elapsedTime = 0;
        let timerInterval;
        let running = false;
        const display = document.getElementById('display');
        const startPauseBtn = document.getElementById('startPause');
        const lapBtn = document.getElementById('lap');
        const resetBtn = document.getElementById('reset');
        const lapsList = document.getElementById('laps');

        function formatTime(time) {
            const hours = Math.floor(time / 3600000);
            const minutes = Math.floor((time % 3600000) / 60000);
            const seconds = Math.floor((time % 60000) / 1000);
            const milliseconds = Math.floor((time % 1000) / 10);
            return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}:${pad(milliseconds)}`;
        }

        function pad(number) {
            return number.toString().padStart(2, '0');
        }

        function updateDisplay() {
            display.textContent = formatTime(elapsedTime);
        }

        function startPause() {
            if (!running) {
                startTime = Date.now() - elapsedTime;
                timerInterval = setInterval(() => {
                    elapsedTime = Date.now() - startTime;
                    updateDisplay();
                }, 10);
                startPauseBtn.textContent = 'Pause';
                lapBtn.disabled = false;
                running = true;
            } else {
                clearInterval(timerInterval);
                startPauseBtn.textContent = 'Start';
                lapBtn.disabled = true;
                running = false;
            }
        }

        function reset() {
            clearInterval(timerInterval);
            elapsedTime = 0;
            updateDisplay();
            lapsList.innerHTML = '';
            startPauseBtn.textContent = 'Start';
            lapBtn.disabled = true;
            running = false;
        }

        function addLap() {
            const lapTime = document.createElement('li');
            lapTime.textContent = formatTime(elapsedTime);
            lapsList.appendChild(lapTime);
        }

        startPauseBtn.addEventListener('click', startPause);
        lapBtn.addEventListener('click', addLap);
        resetBtn.addEventListener('click', reset);
    </script>
</body>
</html>
